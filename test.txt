1. Deployment Validation
Test Case	Description	Command / Tool	Expected Result
Check Helm release status	Verify Sourcegraph was installed correctly	helm list -n <namespace>	Status: deployed
Check pods status	Ensure all pods are running	kubectl get pods -n <namespace>	All pods in Running or Completed state
Check services	Ensure services are created	kubectl get svc -n <namespace>	All relevant services (e.g., sourcegraph-frontend) are exposed
Route/Ingress (if configured)	Check if ingress/route is accessible	curl https://<sourcegraph-url>	HTTP 200 OK or UI response

2. UI Accessibility & Login
Test Case	Description	How to Test	Expected Result
UI opens	Access Sourcegraph via browser	Go to https://<sourcegraph-url>	Sourcegraph UI loads
Create admin	Register admin user if first time	Through UI	Admin created successfully
Admin login	Login with admin credentials	Through UI	Redirected to dashboard

3. Core Functional Test Cases
Test Case	Description	How to Test	Expected Result
Add Git repo	Connect to external Git (GitHub/GitLab)	Admin > Repositories > Add repository	Repo added and indexed
Search code	Run sample search query	Top search bar (e.g., func main)	Results displayed
Code browsing	Navigate repository tree	Click on a file	Code visible and clickable
Syntax highlighting	Check language support	Open .go, .py, .js files	Highlighted properly

4. Configuration Checks
Test Case	Description	Where to Check	Expected Result
Site configuration	Validate base URL, email settings, etc.	Admin > Site Configuration	Configurations saved and validated
External services	Check GitHub/GitLab connections	Admin > External Services	Connections are active

5. Observability & Logs
Test Case	Description	How to Test	Expected Result
Pod logs	Check logs of frontend & search pods	kubectl logs <pod-name> -n <namespace>	No error logs or crashes
Application logs to Splunk	If integrated, check Splunk index	Use index=sourcegraph* in Splunk	Logs from all Sourcegraph pods appear
Alerts and metrics	Check if Grafana/Prometheus dashboard exists (if set up)	Access monitoring stack	Metrics are visible and updating

6. Security Validations
Test Case	Description	How to Test	Expected Result
HTTPS access	Verify TLS certificate	Browser padlock / curl -v	Valid cert (from Secret or Ingress)
Auth method	Check if SSO/SAML/OIDC configured (optional)	Admin > Auth	Login method is working correctly

7. Sample Queries for Testing Search
bash
Copy
Edit
# Basic keyword search
func main

# Search in specific repo
repo:^github\.com/sourcegraph/sourcegraph$ file:README

# Symbol search
type:symbol search

# Structural search (if enabled)
lang:go func ...(...) { ... }

# Regex search
content:("error:" OR "panic:")
✅ Sample Results Table (for reporting)
Test Name	Status	Notes
Helm deployment	✅	
Pods running	✅	
UI accessible	✅	
Login as admin	✅	
Add GitHub repo	✅	GitHub token used
Search code works	✅	
Logs visible in Splunk	✅	Index: sourcegraph
HTTPS valid	✅	Cert from OpenShift secret
Auth via PingSSO	❌	Not enabled yet
Monitoring metrics visible	✅	Grafana setup done
