def get_pods_and_deployments(cluster, image, token):
    """Retrieve Pods and DeploymentConfigs across projects (namespaces) using the vulnerable image."""
    try:
        logging.info(f"Fetching pods and DeploymentConfigs using image: {image} in cluster: {cluster}")
        
        config.load_kube_config()
        k8s_client = client.ApiClient()
        dyn_client = DynamicClient(k8s_client)

        v1_pods = dyn_client.resources.get(api_version="v1", kind="Pod")
        v1_deployments = dyn_client.resources.get(api_version="apps.openshift.io/v1", kind="DeploymentConfig")
        v1_projects = dyn_client.resources.get(api_version="project.openshift.io/v1", kind="Project")  # Use Projects

        matched_pods, matched_deployments = [], []

        projects = v1_projects.get().items  # Fetch OpenShift Projects (Namespaces)

        for project in projects:
            namespace = project.metadata.name  # Extract namespace from Project
            pods = v1_pods.get(namespace=namespace).items
            deployments = v1_deployments.get(namespace=namespace).items

            for pod in pods:
                if image in json.dumps(pod):
                    pod_info = f"Cluster: {cluster} | Namespace: {namespace} | Pod: {pod.metadata.name} | Image: {image}"
                    logging.info(pod_info)  # Print cluster, namespace, pod, and image
                    matched_pods.append(pod_info)

            for deploy in deployments:
                if image in json.dumps(deploy):
                    deploy_info = f"Cluster: {cluster} | Namespace: {namespace} | DeploymentConfig: {deploy.metadata.name} | Image: {image}"
                    logging.info(deploy_info)  # Print cluster, namespace, deployment, and image
                    matched_deployments.append(deploy_info)

        logging.info(f"Found {len(matched_pods)} Pods and {len(matched_deployments)} DeploymentConfigs using {image}.")
        return matched_pods, matched_deployments
    except Exception as e:
        logging.error(f"Error retrieving Pods and DeploymentConfigs: {e}")
        return [], []
