OpenShift Image and Resource Management API
This API helps you manage container images and related resources (like Pods and DeploymentConfigs) within your OpenShift cluster. It's designed to help you clean up old or unused images and keep your OpenShift environment tidy.
Core Functionality
The API provides the following key functions:
Listing Stale Images: Find container images in your OpenShift registry that are older than a specified number of days.
Deleting Stale Images: Remove the stale images identified in the listing. Optionally, delete associated Pods and DeploymentConfigs that are using those old images.
Resource Management: Identify and manage Pods and DeploymentConfigs related to stale images.
Customization:
Filter operations by OpenShift namespace.
Skip specific image tags from deletion.
Keep a specified number of the most recent images.
API Endpoints
The API consists of the following endpoints:
GET /list-stale-images/
Lists stale images, pods, and deployment configs.
Also lists pods and deployment configs with specific statuses.
Parameters:
repository_url (str, required): URL of the image repository (e.g., one of the repositories defined in your configuration).
image_id (str, required): ID of the image (e.g., 'my-app').
image_name (str, required): Name of the image (e.g., 'my-image').
tag_name (str, optional): Tag name to filter images. Can be a single tag or a comma-separated list.
remove_older_than (int, optional): Remove images older than this many days (default: 30).
filter_namespace (str, optional): Filter resources by namespace.
openshift_cluster_url (str, optional): URL of the OpenShift cluster (default: Uses a pre-defined cluster URL).
skip_tags (List[str], optional): List of tags to skip during deletion.
keep_most_recent (int, optional): Number of recent images to keep. 0 to disable.
Returns: HTML page displaying:
Stale images
DeploymentConfigs to delete
Pods to delete
Recent images
Pod statuses
Deployment config statuses
DELETE /delete-stale-images/
Deletes stale images, pods, and deployment configs.
Parameters:
repository_url (str, required): URL of the image repository.
image_id (str, required): ID of the image.
image_name (str, required): Name of the image.
tag_name (str, optional): Tag name to clean.
remove_older_than (int, required): Remove images older than this many days.
filter_namespace (str, optional): Filter resources by namespace.
delete_operation (bool, optional): Enable deletion of images, pods, and deployment configs (default: True).
openshift_cluster_url (str, required): URL of the OpenShift cluster.
skip_tags (List[str], required): Comma-separated list of tags to skip.
keep_most_recent (int, optional): Number of recent images to keep. 0 to disable.
Returns: HTML page displaying the results of the deletion operation.
Key Features and Concepts
Stale Image: An image is considered stale if its creation date is older than the specified remove_older_than value.
Namespaces: OpenShift namespaces allow you to organize projects. This API lets you filter operations by namespace to target specific projects.
Image Identification: Images are identified by their repository URL, image ID, image name, and tag.
Resource Cleanup: The API can automatically identify and delete Pods and DeploymentConfigs that use stale images, helping to reclaim resources.
Configuration: The API relies on an OpenShift ConfigMap and Secret for configuration:
ConfigMap: Stores the Artifactory and registry URLs.
Secret: Stores authentication credentials for the registry.
Authentication: The API uses a registry token for authentication when interacting with the OpenShift container registry.
OpenShift Client: The API uses the OpenShift client library (OCPClient) to interact with the OpenShift cluster.
How to Use the API
Deploy the API: Deploy this API within your OpenShift cluster. It will need to be able to access the OpenShift API, the container registry, and any Artifactory instance you are using.
Configure the API:
Create a ConfigMap with the artifactory_url and registry_url.
Create a Secret with the registry authentication token.
Use the Endpoints: Use the GET and DELETE endpoints to list and delete stale images, respectively. You can use a web browser, curl, or an HTTP client library to interact with the API.
Example Usage
To list stale images:
GET /list-stale-images/?repository_url=<repository_url>&image_id=<image_id>&image_name=<image_name>&remove_older_than=30&filter_namespace=<namespace>


To delete stale images:
DELETE /delete-stale-images/?repository_url=<repository_url>&image_id=<image_id>&image_name=<image_name>&remove_older_than=30&filter_namespace=<namespace>&delete_operation=True


Important Considerations
Permissions: Ensure that the API has the necessary permissions to access the OpenShift API, container registry, and Artifactory.
Deletion: Use the delete functionality with caution, as it can permanently remove images, Pods, and DeploymentConfigs. Test in a non-production environment first.
Tag Management: Be mindful of the tags you are deleting, as deleting a tag may affect deployments that rely on that tag.
